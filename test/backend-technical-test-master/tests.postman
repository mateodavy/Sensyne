{
	"info": {
		"_postman_id": "dbc57587-8392-4bc9-9253-ded33bb80536",
		"name": "Sensyne backend test API",
		"description": "Sensyne backend tech test to create a fictional product.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "products",
			"item": [
				{
					"name": "Get final state",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests['Length of array'] = jsonData.length === 3;",
									"tests[\"First product name\"] = jsonData[0].name === \"Lavender heart\";",
									"tests[\"First product price\"] = jsonData[0].price === \"9.25\";",
									"tests[\"First product id\"] = jsonData[0].id === 1;",
									"",
									"tests[\"Second product name\"] = jsonData[1].name === \"Personalised cufflinks\";",
									"tests[\"Second product price\"] = jsonData[1].price === \"45.00\";",
									"tests[\"Second product id\"] = jsonData[1].id === 2;",
									"",
									"tests[\"Third product name\"] = jsonData[2].name === \"Kids T-shirt\";",
									"tests[\"Third product price\"] = jsonData[2].price === \"19.95\";",
									"tests[\"Third product id\"] = jsonData[2].id === 3;",
									"",
									"",
									"",
									"",
									"",
									"var schema = {",
									" \"type\":\"array\",",
									" \"items\": {",
									"\t\"properties\": {",
									"\t\t\"id\": {",
									"\t\t\t\"type\": \"integer\",",
									"\t\t\t\"example\": 1,",
									"\t\t\t\"description\": \"the id of the product\"",
									"\t\t},",
									"\t\t\"price\": {",
									"\t\t\t\"type\": \"string\",",
									"\t\t\t\"example\": 9.25,",
									"\t\t\t\"description\": \"price, in pounds\"",
									"\t\t},",
									"\t\t\"name\": {",
									"\t\t\t\"type\": \"string\",",
									"\t\t\t\"example\": \"Lavender heart\",",
									"\t\t\t\"description\": \"the name of the product\"",
									"\t\t}",
									"\t},",
									"\t\"description\": \"A product\",",
									"        \"required\":[\"id\",\"price\",\"name\"]",
									" }",
									"};",
									"",
									"",
									"console.log(tv4.error);",
									"tests[\"Valid Data1\"] = tv4.validate(jsonData, schema);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"products"
							]
						},
						"description": "Return a list of products"
					},
					"response": []
				}
			],
			"description": "Folder for products",
			"protocolProfileBehavior": {}
		},
		{
			"name": "product",
			"item": [
				{
					"name": "Create a single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc0b6ce-40af-4cb6-8ec6-982ca1715cfe",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"TestName\",\n\t\"price\": 9.93\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/v1/product",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "299eb78c-97fb-4144-addb-e8b0738e1b3c",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Product name\"] = jsonData.name === \"TestName\";",
									"tests[\"Product price\"] = jsonData.price === \"9.93\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Return a single product"
					},
					"response": []
				},
				{
					"name": "Get non-existent product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e92ac7c4-872a-4c29-8f23-93f58ff0c080",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/product/400",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"400"
							]
						},
						"description": "Return a single product"
					},
					"response": []
				},
				{
					"name": "Update a single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf592c87-9488-4ea8-8456-d80e23006c3b",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"UpdatedTestName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Update a product"
					},
					"response": []
				},
				{
					"name": "Update a nonexistent product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c93bb1b-b546-4099-a30d-08fafc3a89a0",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"UpdatedTestName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/v1/product/402",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"402"
							]
						},
						"description": "Update a product"
					},
					"response": []
				},
				{
					"name": "Get single product again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df0f74d5-9fd0-494b-8305-62fb30474b37",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Product name\"] = jsonData.name === \"UpdatedTestName\";",
									"tests[\"Product price\"] = jsonData.price === \"9.93\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Return a single product"
					},
					"response": []
				},
				{
					"name": "Delete single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c51e42ac-7040-4b43-a611-b1b7ee2b42ae",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Delete a product"
					},
					"response": []
				},
				{
					"name": "Delete non-existent product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b27d737-38dc-4627-94c9-6bba5d9ece92",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Delete a product"
					},
					"response": []
				},
				{
					"name": "Confirm deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe499270-eaf6-451f-8063-985a2e074eac",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/product/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"product",
								"4"
							]
						},
						"description": "Return a single product"
					},
					"response": []
				}
			],
			"description": "Folder for product",
			"protocolProfileBehavior": {}
		},
		{
			"name": "initial_state",
			"item": [
				{
					"name": "Get initial state",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests['Length of array'] = jsonData.length === 3;",
									"tests[\"First product name\"] = jsonData[0].name === \"Lavender heart\";",
									"tests[\"First product price\"] = jsonData[0].price === \"9.25\";",
									"tests[\"First product id\"] = jsonData[0].id === 1;",
									"",
									"tests[\"Second product name\"] = jsonData[1].name === \"Personalised cufflinks\";",
									"tests[\"Second product price\"] = jsonData[1].price === \"45.00\";",
									"tests[\"Second product id\"] = jsonData[1].id === 2;",
									"",
									"tests[\"Third product name\"] = jsonData[2].name === \"Kids T-shirt\";",
									"tests[\"Third product price\"] = jsonData[2].price === \"19.95\";",
									"tests[\"Third product id\"] = jsonData[2].id === 3;",
									"",
									"",
									"",
									"",
									"",
									"var schema = {",
									" \"type\":\"array\",",
									" \"items\": {",
									"\t\"properties\": {",
									"\t\t\"id\": {",
									"\t\t\t\"type\": \"integer\",",
									"\t\t\t\"example\": 1,",
									"\t\t\t\"description\": \"the id of the product\"",
									"\t\t},",
									"\t\t\"price\": {",
									"\t\t\t\"type\": \"string\",",
									"\t\t\t\"example\": 9.25,",
									"\t\t\t\"description\": \"price, in pounds\"",
									"\t\t},",
									"\t\t\"name\": {",
									"\t\t\t\"type\": \"string\",",
									"\t\t\t\"example\": \"Lavender heart\",",
									"\t\t\t\"description\": \"the name of the product\"",
									"\t\t}",
									"\t},",
									"\t\"description\": \"A product\",",
									"        \"required\":[\"id\",\"price\",\"name\"]",
									" }",
									"};",
									"",
									"",
									"console.log(tv4.error);",
									"tests[\"Valid Data1\"] = tv4.validate(jsonData, schema);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"products"
							]
						},
						"description": "Return a list of products"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}